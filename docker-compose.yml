version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: storage_db
    environment:
      POSTGRES_USER: ${DB_USER:-app_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
      POSTGRES_DB: ${DB_NAME:-storage_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-app_user} -d ${DB_NAME:-storage_db}"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: api/dockerfile
    container_name: storage_api
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL:
        postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
    ports:
      - "8080:8000"
    volumes:
      - ./api:/app/api
      - ./scripts:/app/scripts
    restart: unless-stopped

  # Резервируем сервис для телеграм-бота
  # tg_bot:
  #   image: busybox
  #   container_name: storage_tg_bot
  #   command: tail -f /dev/null  # Заглушка
  #   volumes:
  #     - ./tg:/app/tg

volumes:
  postgres_data: